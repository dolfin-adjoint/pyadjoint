# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test-fenics:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: ghcr.io/scientificcomputing/fenics:2023-08-14
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      # - image: quay.io/fenicsproject/stable:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "pyproject.toml" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get install -y python3-dev graphviz libgraphviz-dev pkg-config patchelf
            python3 -m pip install -e .[all]
            python3 -m pip install roltrilinos
            python3 -m pip install ROL
            python3 -m pip install protobuf
            python3 -m pip install --upgrade numpy

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "pyproject.toml" }}

      - restore_cache:
          keys:
            - v3-dolfin-jit-cache

      - run:
          name: Flake8 tests
          command: |
            python3 -m flake8

      - run:
          name: Install dolfin-adjoint
          command: |
            git clone https://github.com/dolfin-adjoint/dolfin-adjoint ~/dolfin-adjoint
            python3 -m pip install -e ~/dolfin-adjoint[all]

      - run:
          name: Run tests
          command: |
            coverage run --source=fenics_adjoint -m pytest ~/dolfin-adjoint/tests/fenics_adjoint/
            coverage report
            coverage html

      - run:
          name: Run migration tests
          command: |
            python3 -m pytest ~/dolfin-adjoint/tests/migration

      - save_cache:
          key: v2-dolfin-jit-cache
          paths:
            - ~/.cache/instant
            - ~/.cache/dijitso

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - store_artifacts:
          path: htmlcov

  test-firedrake:
    docker:
      - image: firedrakeproject/firedrake:latest

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "pyproject.toml" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            source /home/firedrake/firedrake/bin/activate
            pip3 install -e .[test]

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "pyproject.toml" }}

      - run:
          name: Run tests
          command: |
            source /home/firedrake/firedrake/bin/activate
            coverage run --source=pyadjoint -m pytest tests/pyadjoint/
            coverage report
            coverage html

      - run:
          name: Run firedrake adjoint tests
          command: |
            source /home/firedrake/firedrake/bin/activate
            python3 -m pytest /home/firedrake/firedrake/src/firedrake/tests/firedrake/adjoint

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - store_artifacts:
          path: htmlcov

workflows:
  version: 2
  all:
    jobs:
      - test-fenics
      - test-firedrake
